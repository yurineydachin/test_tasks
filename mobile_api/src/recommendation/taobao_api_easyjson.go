// AUTOGENERATED FILE: easyjson marshaller/unmarshallers.

package recommendation_service

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson776a429fDecodeMobileSearchApiSrvRecommendation(in *jlexer.Lexer, out *TaoBaoHttpSessionResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		case "success":
			out.Success = bool(in.Bool())
		case "id":
			out.ID = string(in.String())
		case "errorCode":
			out.ErrorCode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation(out *jwriter.Writer, in TaoBaoHttpSessionResponse) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"data\":")
	(in.Data).MarshalEasyJSON(out)
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"success\":")
	out.Bool(bool(in.Success))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"id\":")
	out.String(string(in.ID))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"errorCode\":")
	out.String(string(in.ErrorCode))
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TaoBaoHttpSessionResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson776a429fEncodeMobileSearchApiSrvRecommendation(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TaoBaoHttpSessionResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson776a429fEncodeMobileSearchApiSrvRecommendation(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TaoBaoHttpSessionResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson776a429fDecodeMobileSearchApiSrvRecommendation(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TaoBaoHttpSessionResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson776a429fDecodeMobileSearchApiSrvRecommendation(l, v)
}
func easyjson776a429fDecodeMobileSearchApiSrvRecommendation1(in *jlexer.Lexer, out *RecommendedByWidgetResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if !in.IsDelim(']') {
			*out = make(RecommendedByWidgetResponse, 0, 1)
		} else {
			*out = RecommendedByWidgetResponse{}
		}
		for !in.IsDelim(']') {
			var v1 RecommendationByWidget
			easyjson776a429fDecodeMobileSearchApiSrvRecommendation2(in, &v1)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation1(out *jwriter.Writer, in RecommendedByWidgetResponse) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			easyjson776a429fEncodeMobileSearchApiSrvRecommendation2(out, v3)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v RecommendedByWidgetResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson776a429fEncodeMobileSearchApiSrvRecommendation1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecommendedByWidgetResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson776a429fEncodeMobileSearchApiSrvRecommendation1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecommendedByWidgetResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson776a429fDecodeMobileSearchApiSrvRecommendation1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecommendedByWidgetResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson776a429fDecodeMobileSearchApiSrvRecommendation1(l, v)
}
func easyjson776a429fDecodeMobileSearchApiSrvRecommendation2(in *jlexer.Lexer, out *RecommendationByWidget) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "widgetId":
			out.Placement = uint64(in.Uint64())
		case "heading":
			out.Heading = string(in.String())
		case "products":
			if in.IsNull() {
				in.Skip()
				out.Products = nil
			} else {
				in.Delim('[')
				if !in.IsDelim(']') {
					out.Products = make([]ProductByWidget, 0, 2)
				} else {
					out.Products = []ProductByWidget{}
				}
				for !in.IsDelim(']') {
					var v4 ProductByWidget
					easyjson776a429fDecodeMobileSearchApiSrvRecommendation3(in, &v4)
					out.Products = append(out.Products, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation2(out *jwriter.Writer, in RecommendationByWidget) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"widgetId\":")
	out.Uint64(uint64(in.Placement))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"heading\":")
	out.String(string(in.Heading))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"products\":")
	if in.Products == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v5, v6 := range in.Products {
			if v5 > 0 {
				out.RawByte(',')
			}
			easyjson776a429fEncodeMobileSearchApiSrvRecommendation3(out, v6)
		}
		out.RawByte(']')
	}
	out.RawByte('}')
}
func easyjson776a429fDecodeMobileSearchApiSrvRecommendation3(in *jlexer.Lexer, out *ProductByWidget) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "sku":
			out.SKU = string(in.String())
		case "ct_url":
			out.CtURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation3(out *jwriter.Writer, in ProductByWidget) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"sku\":")
	out.String(string(in.SKU))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"ct_url\":")
	out.String(string(in.CtURL))
	out.RawByte('}')
}
func easyjson776a429fDecodeMobileSearchApiSrvRecommendation4(in *jlexer.Lexer, out *RecommendedByPlacementResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if !in.IsDelim(']') {
			*out = make(RecommendedByPlacementResponse, 0, 1)
		} else {
			*out = RecommendedByPlacementResponse{}
		}
		for !in.IsDelim(']') {
			var v7 RecommendationByPlacement
			easyjson776a429fDecodeMobileSearchApiSrvRecommendation5(in, &v7)
			*out = append(*out, v7)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation4(out *jwriter.Writer, in RecommendedByPlacementResponse) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v8, v9 := range in {
			if v8 > 0 {
				out.RawByte(',')
			}
			easyjson776a429fEncodeMobileSearchApiSrvRecommendation5(out, v9)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v RecommendedByPlacementResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson776a429fEncodeMobileSearchApiSrvRecommendation4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecommendedByPlacementResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson776a429fEncodeMobileSearchApiSrvRecommendation4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecommendedByPlacementResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson776a429fDecodeMobileSearchApiSrvRecommendation4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecommendedByPlacementResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson776a429fDecodeMobileSearchApiSrvRecommendation4(l, v)
}
func easyjson776a429fDecodeMobileSearchApiSrvRecommendation5(in *jlexer.Lexer, out *RecommendationByPlacement) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "placement_name":
			out.Placement = string(in.String())
		case "strat_message":
			out.Heading = string(in.String())
		case "recs":
			if in.IsNull() {
				in.Skip()
				out.Products = nil
			} else {
				in.Delim('[')
				if !in.IsDelim(']') {
					out.Products = make([]ProductByPlacement, 0, 2)
				} else {
					out.Products = []ProductByPlacement{}
				}
				for !in.IsDelim(']') {
					var v10 ProductByPlacement
					easyjson776a429fDecodeMobileSearchApiSrvRecommendation6(in, &v10)
					out.Products = append(out.Products, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation5(out *jwriter.Writer, in RecommendationByPlacement) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"placement_name\":")
	out.String(string(in.Placement))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"strat_message\":")
	out.String(string(in.Heading))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"recs\":")
	if in.Products == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v11, v12 := range in.Products {
			if v11 > 0 {
				out.RawByte(',')
			}
			easyjson776a429fEncodeMobileSearchApiSrvRecommendation6(out, v12)
		}
		out.RawByte(']')
	}
	out.RawByte('}')
}
func easyjson776a429fDecodeMobileSearchApiSrvRecommendation6(in *jlexer.Lexer, out *ProductByPlacement) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pid":
			out.SKU = string(in.String())
		case "ct_url":
			out.CtURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson776a429fEncodeMobileSearchApiSrvRecommendation6(out *jwriter.Writer, in ProductByPlacement) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"pid\":")
	out.String(string(in.SKU))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"ct_url\":")
	out.String(string(in.CtURL))
	out.RawByte('}')
}
